---
- name: Include distribution and version-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_os_family }}.yml"
      skip: true

- include_tasks: setup-vars.yml

- name: Ensure ClamAV packages are installed.
  package: name={{ item }} state=present
  with_items: "{{ clamav_packages }}"
  register: clamav_packages_install

- name: Change configuration for the ClamAV Freshclam.
  lineinfile:
    path: "{{ clamav_freshclam_config_path }}"
    regexp: '{{ item.regexp }}'
    line: "{{ item.line | default('') }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ clamav_freshclam_configuration_changes }}"

- name: Run freshclam after ClamAV packages change.
  command: freshclam
  when: clamav_packages_install.changed
  register: freshclam_result
  notify: restart clamav daemon
  # On Debian, freshclam is automatically run post-install, so this may fail.
  failed_when:
    - freshclam_result is failed
    - freshclam_result.stderr.find('locked by another process') != -1
  tags: ['skip_ansible_lint']

- include_tasks: setup-RedHat-6.yml
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version == '6'

- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version > '6'

- name: Change configuration for the ClamAV daemon.
  lineinfile:
    path: "{{ clamav_daemon_config_path }}"
    regexp: '{{ item.regexp }}'
    line: "{{ item.line | default('') }}"
    state: "{{ item.state | default('present') }}"
    mode: 0644
  with_items: "{{ clamav_daemon_configuration_changes }}"

- name: Setup scanning script and daily scanning
  block: 
    - name: Add clamav user to sudoers file
      ansible.builtin.lineinfile:
        path: /etc/sudoers.d/clamav
        line: '{{ clamav_user }} ALL=(root) NOPASSWD: /usr/bin/clamdscan *'
        validate: 'visudo -cf %s'
        create: yes
    - name: Add paths to exclude from scanning to clamd config
      ansible.builtin.lineinfile:
        path: "{{ clamav_daemon_config_path }}"
        insertafter: '^.*ExcludePath .*$'
        line: "ExcludePath {{ item }}"
        state: "present"
        mode: 0644
      with_items: "{{ clamav_daemon_configuration_changes_exclude_paths }}"
    - name: Add scanning script from template
      ansible.builtin.copy:
        src: clamav-scan.sh
        dest: /usr/local/bin/clamav-scan.sh
        owner: "{{ clamav_user }}"
        group: "{{ clamav_user }}"
        mode: '0655'
    - name: Add scanning entry to cron 
      ansible.builtin.cron:
        name: clamav scan
        minute: "{{ clamav_scanning_minute | default(0) }}"
        hour: "{{ clamav_scanning_hour | default(03) }}"
        weekday: "{{ clamav_scanning_weekday | default(omit) }}"
        day: "{{ clamav_scanning_day | default(omit) }}"
        month:  "{{ clamav_scanning_month | default(omit) }}"
        user: "{{ clamav_user }}"
        job: "/usr/local/bin/clamav-scan.sh"
        cron_file: clamav-scan

- name: Ensure ClamAV daemon is running (if configured).
  service:
    name: "{{ clamav_daemon }}"
    state: "{{ clamav_daemon_state }}"
    enabled: "{{ clamav_daemon_enabled }}"
  when: ansible_virtualization_type != "docker"

- name: Ensure ClamAV freshclam daemon is running (if configured).
  service:
    name: "{{ clamav_freshclam_daemon }}"
    state: "{{ clamav_freshclam_daemon_state }}"
    enabled: "{{ clamav_freshclam_daemon_enabled }}"
  when: ansible_virtualization_type != "docker"