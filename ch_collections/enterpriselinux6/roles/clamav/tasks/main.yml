---
- name: Include OS-Specific variables
  include_vars: "{{ ansible_os_family }}.yml"

- include_tasks: setup-vars.yml

- name: Ensure ClamAV packages are installed.
  package: name={{ item }} state=present
  with_items: "{{ clamav_packages }}"
  register: clamav_packages_install

- name: Change configuration for the ClamAV Freshclam.
  lineinfile:
    path: "{{ clamav_freshclam_config_path }}"
    regexp: '{{ item.regexp }}'
    line: "{{ item.line | default('') }}"
    state: "{{ item.state | default('present') }}"
  with_items: "{{ clamav_freshclam_configuration_changes }}"

- name: Run freshclam after ClamAV packages change.
  command: freshclam
  when: clamav_packages_install.changed
  register: freshclam_result
  notify: restart clamav daemon
  # On Debian, freshclam is automatically run post-install, so this may fail.
  failed_when:
    - freshclam_result is failed
    - freshclam_result.stderr.find('locked by another process') != -1
  tags: ['skip_ansible_lint']

- name: create /etc/clamd.d/scan.conf file for centos 6
  command: touch /etc/clamd.d/scan.conf

- name: Change configuration for the ClamAV daemon.
  lineinfile:
    path: "{{ clamav_daemon_config_path }}"
    regexp: '{{ item.regexp }}'
    line: "{{ item.line | default('') }}"
    state: "{{ item.state | default('present') }}"
    mode: 0644
  with_items: "{{ clamav_daemon_configuration_changes }}"

- name: Create the socket file with correct ownership
  ansible.builtin.file:
    path: "{{ clamav_daemon_localsocket }}"
    state: touch
    owner: clam
    group: clam

- name: Ensure ClamAV daemon is running (if configured).
  service:
    name: "{{ clamav_daemon }}"
    state: "{{ clamav_daemon_state }}"
    enabled: "{{ clamav_daemon_enabled }}"

# Install Cronie for Freshclam
- name: Install cron (RedHat).
  yum: name=cronie state=present
 
# Setup Cron job for Freshclam to run every hour
- name: Freshclam cron.
  cron:
    name: 'Run freshclam'
    state: 'present'
    hour: '*'
    minute: '0'
    job: '/usr/bin/freshclam'
